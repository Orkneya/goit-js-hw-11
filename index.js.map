{"version":3,"file":"index.js","sources":["../src/js/render-function.js","../src/js/pixabay-api.js","../src/js/main.js"],"sourcesContent":["// Описаний у документації\nimport SimpleLightbox from \"simplelightbox\";\n// Додатковий імпорт стилів\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n\nimport { refs } from './pixabay-api';\n\n// ------------------\n// function createItem({preview,original,description}){\n//   return `<li class=\"gallery-item\">\n//     <a class=\"gallery-link\" href=\"${original}\">\n//       <img\n//         class=\"gallery-image\"\n//         src=\"${preview}\"\n//         data-source=\"${original}\"\n//         alt=\"${description}\"\n//       />\n//     </a>\n//   </li>`;\n//   };\n\n//   function CreateItems(items){\n//     return items.map(CreateItem).join('');\n//   }\n  \n//   conteiner.insertAdjacentHTML(\"beforeend\", CreateItems(images));\n  // ------------------------\n  \n  // conteiner.addEventListener(\"click\", event=> {\n  \n  //   event.preventDefault();\n  \n  //   if(event.target=== event.currentTarget) return;\n  \n  //   const liImg = event.target.dataset.source;\n  \n    // const instance = basicLightbox.create(`<img src= ${liImg} />`);\n    // instance.show();\n  // });\n\nexport function renderUsers(users) {\n  const markup = users\n    .map((user) => {\n      return `<li class=\"gallery-item\">\n      <a class=\"gallery-link\" href=\"${user.largeImageURL}\">\n      <img\n        class=\"gallery-image\"\n        src=\"${user.webformatURL}\"\n        data-source=\"${user.largeImageURL}\"\n        alt=\"${user.tags.split(',')[0]}\"\n      />\n      </a>\n        <div class=\"img-info\">\n            <span class=\"img-span\"> Likes: <br> ${user.likes}</span>\n            <span class=\"img-span\"> Views: <br> ${user.views}</span>\n            <span class=\"img-span\"> Comments: <br> ${user.comments}</span>\n            <span class=\"img-span\"> Downloads: <br> ${user.downloads}</span>\n        </div>\n      </li>`;\n    })\n    .join(\"\");\n  refs.container.insertAdjacentHTML(\"afterbegin\",markup);\n  const lightbox = new SimpleLightbox('.gallery a', {\n    captionsData: 'alt',\n    captionDelay: 250,\n  });\n}\n// ------------------\n // data.hits[1].webformatURL\n  // webformatURL — посилання на маленьке зображення для списку карток у галереї\n  // largeImageURL — посилання на велике зображення для модального вікна\n  // tags — рядок з описом зображення. Підійде для атрибута alt\n  // likes — кількість вподобайок\n  // views — кількість переглядів\n  // comments — кількість коментарів\n  // downloads — кількість завантажень\n\n\n","import axios from 'axios';\n\n// Описаний у документації\nimport iziToast from \"izitoast\";\n// Додатковий імпорт стилів\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nimport { renderUsers } from \"./render-function\";\n\nexport const refs={\n  container : document.querySelector(\".gallery\"),\n  formSubmit: document.querySelector(\".form\"),\n  // fetchUsersBtn : document.querySelector(\".btm\"),\n}\n\nconst API_KEY = '48810135-3fc2af65eea4986756bc51882';\n\n export function searchImg(name){\n const params = {\n    key : API_KEY ,\n    q : name,\n    image_type : \"photo\",\n    orientation : \"horizontal\",\n    safesearch : true,\n  };\n  const BASE_URl=\"https://pixabay.com/api/?\";\n  console.log(111,params);\n  \n  const url = BASE_URl+\"key=\"+API_KEY+\"&q=\"+encodeURIComponent(name);\n  console.log(555,url);\n  fetch\n  fetch(url,{params})\n  .then(response => {\n    if (!response.ok) {\n      throw new Error(`HTTP error! Status: ${response.status}`);\n    }\n    console.log(9090,params.orientation);\n    \n    console.log(333,response);\n    return response.json();\n    // Response handling\n  })\n  .then(data => {\n    console.log(222,data.hits[2].largeImageURL);\n    console.log(223,data.hits[1].webformatURL);\n    console.log(233,data.hits[2].tags);\n    console.log(543,data.hits);\n    \n    renderUsers(data.hits);\n    // Data handling\n  })\n  // .catch(error => {\n\n  //   console.log(\"Sorry, there are no images matching your search query. Please, try again!\",error);\n  // });\n  .catch(error=>{\n    iziToast.show({\n    message:\"Sorry, there are no images matching your search query. Please, try again!\",\n    position:\"topRight\",\n    messageColor: 'white',\n    backgroundColor: \"#cb4335\",\n    });\n  });\n }\n\n// export const options = {\n//   method : \"GET\",\n// }\n// ------------------\nexport function onFormSubmit(e){\n  e.preventDefault();\n  const inputValue = e.currentTarget.elements.inpImg.value;\n  if (inputValue === \"\"){\n    iziToast.show({\n      message:\"Fill please all fields!\",\n      position:\"topCenter\",\n      messageColor: 'white',\n      backgroundColor: \"#cb4335\",\n      });\n    return console.log(\"Fill please all fields!\");\n  }\n\n  console.log(123,inputValue);\n  searchImg(inputValue);\n  refs.formSubmit.reset;\n};\n// --------------\n// export function fetchUsers(e) {\n//   console.log(e.target.inpImg.value,111);}\n  \n// // --------------\n// const params = new URLSearchParams({\n//   key : API_KEY ,\n//   q : name,\n//   image_type : \"photo\",\n//   orientation : \"horizontal\",\n//   safesearch : true,\n// });\n// var gallery = $('.gallery a').simpleLightbox()\n\n// gallery.next(); // Next Image\n// gallery.refresh();//refresh image \tУничтожает и повторно инициализирует лайтбокс, необходимый, например, для вызовов Ajax или после манипуляций с DOM.\n\n// function getAllImg(){\n//   const BASE_URL = \"https://pixabay.com\";\n//   const  END_POINT = \"/api/\";\n//   const url = `${BASE_URL}${END_POINT}`;\n//   const params = {};\n//   return axios.get(url,)\n// }","// import axios from \"axios\";\nimport { onFormSubmit, refs} from \"./pixabay-api\";\n\nrefs.formSubmit.addEventListener('submit', onFormSubmit);\n\n\n\n\n"],"names":["renderUsers","users","markup","user","refs","SimpleLightbox","API_KEY","searchImg","name","params","BASE_URl","url","response","data","error","iziToast","onFormSubmit","e","inputValue"],"mappings":"6vBAwCO,SAASA,EAAYC,EAAO,CACjC,MAAMC,EAASD,EACZ,IAAKE,GACG;AAAA,sCACyBA,EAAK,aAAa;AAAA;AAAA;AAAA,eAGzCA,EAAK,YAAY;AAAA,uBACTA,EAAK,aAAa;AAAA,eAC1BA,EAAK,KAAK,MAAM,GAAG,EAAE,CAAC,CAAC;AAAA;AAAA;AAAA;AAAA,kDAIYA,EAAK,KAAK;AAAA,kDACVA,EAAK,KAAK;AAAA,qDACPA,EAAK,QAAQ;AAAA,sDACZA,EAAK,SAAS;AAAA;AAAA,YAG/D,EACA,KAAK,EAAE,EACVC,EAAK,UAAU,mBAAmB,aAAaF,CAAM,EACpC,IAAIG,EAAe,aAAc,CAChD,aAAc,MACd,aAAc,GAClB,CAAG,CACH,CCzDO,MAAMD,EAAK,CAChB,UAAY,SAAS,cAAc,UAAU,EAC7C,WAAY,SAAS,cAAc,OAAO,CAE5C,EAEME,EAAU,qCAER,SAASC,EAAUC,EAAK,CAC/B,MAAMC,EAAS,CACZ,IAAMH,EACN,EAAIE,EACJ,WAAa,QACb,YAAc,aACd,WAAa,EACjB,EACQE,EAAS,4BACf,QAAQ,IAAI,IAAID,CAAM,EAEtB,MAAME,EAAMD,EAAS,OAAOJ,EAAQ,MAAM,mBAAmBE,CAAI,EACjE,QAAQ,IAAI,IAAIG,CAAG,EAEnB,MAAMA,EAAI,CAAC,OAAAF,CAAM,CAAC,EACjB,KAAKG,GAAY,CAChB,GAAI,CAACA,EAAS,GACZ,MAAM,IAAI,MAAM,uBAAuBA,EAAS,MAAM,EAAE,EAE1D,eAAQ,IAAI,KAAKH,EAAO,WAAW,EAEnC,QAAQ,IAAI,IAAIG,CAAQ,EACjBA,EAAS,MAEpB,CAAG,EACA,KAAKC,GAAQ,CACZ,QAAQ,IAAI,IAAIA,EAAK,KAAK,CAAC,EAAE,aAAa,EAC1C,QAAQ,IAAI,IAAIA,EAAK,KAAK,CAAC,EAAE,YAAY,EACzC,QAAQ,IAAI,IAAIA,EAAK,KAAK,CAAC,EAAE,IAAI,EACjC,QAAQ,IAAI,IAAIA,EAAK,IAAI,EAEzBb,EAAYa,EAAK,IAAI,CAEzB,CAAG,EAKA,MAAMC,GAAO,CACZC,EAAS,KAAK,CACd,QAAQ,4EACR,SAAS,WACT,aAAc,QACd,gBAAiB,SACrB,CAAK,CACL,CAAG,CACD,CAMK,SAASC,EAAaC,EAAE,CAC7BA,EAAE,eAAc,EAChB,MAAMC,EAAaD,EAAE,cAAc,SAAS,OAAO,MACnD,GAAIC,IAAe,GACjB,OAAAH,EAAS,KAAK,CACZ,QAAQ,0BACR,SAAS,YACT,aAAc,QACd,gBAAiB,SACvB,CAAO,EACI,QAAQ,IAAI,yBAAyB,EAG9C,QAAQ,IAAI,IAAIG,CAAU,EAC1BX,EAAUW,CAAU,EACpBd,EAAK,WAAW,KAClB,CClFAA,EAAK,WAAW,iBAAiB,SAAUY,CAAY"}